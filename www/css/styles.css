/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/
/* line 6, /Users/panagiotisthomoglou/Projects/camper/src/scss/global/_reset.scss */
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
/* line 16, /Users/panagiotisthomoglou/Projects/camper/src/scss/global/_reset.scss */
article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {
  display: block; }

/* line 19, /Users/panagiotisthomoglou/Projects/camper/src/scss/global/_reset.scss */
body {
  line-height: 1; }

/* line 22, /Users/panagiotisthomoglou/Projects/camper/src/scss/global/_reset.scss */
ol, ul {
  list-style: none; }

/* line 25, /Users/panagiotisthomoglou/Projects/camper/src/scss/global/_reset.scss */
blockquote, q {
  quotes: none; }

/* line 29, /Users/panagiotisthomoglou/Projects/camper/src/scss/global/_reset.scss */
blockquote:before, blockquote:after {
  content: '';
  content: none; }

/* line 34, /Users/panagiotisthomoglou/Projects/camper/src/scss/global/_reset.scss */
q:before, q:after {
  content: '';
  content: none; }

/* line 38, /Users/panagiotisthomoglou/Projects/camper/src/scss/global/_reset.scss */
table {
  border-collapse: collapse;
  border-spacing: 0; }

/* -------------------------------------------------------------
 *  Sass CSS3 Mixins! The Cross-Browser CSS3 Sass Library
 *  By: Matthieu Aussaguel, http://www.mynameismatthieu.com, @matthieu_tweets
 *
 *  List of CSS3 Sass Mixins File to be @imported and @included as you need
 *
 *  The purpose of this library is to facilitate the use of CSS3 on different browsers avoiding HARD TO READ and NEVER
 *  ENDING css files
 *
 *  note: All CSS3 Properties are being supported by Safari 5
 *  more info: http://www.findmebyip.com/litmus/#css3-properties
 *
 *  Mixins available:
 *    -   css3-prefix             - arguments: Property, Value
 *    -   background-gradient     - arguments: Start Color: #3C3C3C, End Color: #999999
*     -   background-horizontal   - arguments: Start Color: #3C3C3C, End Color: #999999
 *    -   background-radial       - arguments: Start Color: #FFFFFF, Start position: 0%, End Color: #000000, End position: 100%
 *    -   background-size         - arguments: Width: 100%, Height: 100%
 *    -   background-opacity      - arguments: Color: #000, Opacity: .85
 *    -   border-radius           - arguments: Radius: 5px
 *    -   border-radius-separate  - arguments: Top Left: 5px, Top Right: 5px, Bottom Left: 5px, Bottom Right: 5px
 *    -   box                     - arguments: Orientation: horizontal, Pack: center, Align: center
 *    -   box-rgba                - arguments: R: 60, G: 3, B: 12, Opacity: 0.23, Color: #3C3C3C
 *    -   box-shadow              - arguments: X: 2px, Y: 2px, Blur: 5px, Color: rgba(0,0,0,.4)
 *    -   box-sizing              - arguments: Type: border-box
 *    -   columns                 - arguments: Count: 3, Gap: 10
 *    -   double-borders          - arguments: Color One: #3C3C3C, Color Two: #999999, Radius: 0
 *    -   flex                    - arguments: Value: 1
 *    -   flip                    - arguments: ScaleX: -1
 *    -   font-face               - arguments: Font Family: myFont, Eot File Src: myFont.eot, Woff File Src: myFont.woff, Ttf File Src: myFont.ttf
 *    -   opacity                 - arguments: Opacity: 0.5
 *    -   outline radius          - arguments: Radius: 5px
 *    -   resize                  - arguments: Direction: both
 *    -   rotate                  - arguments: Degree: 0, M11: 0, M12: 0, M21: 0, M22: 0
 *    CSS Matrix Rotation Calculator http://www.boogdesign.com/examples/transforms/matrix-calculator.html
 *    -   text-shadow             - arguments: X: 2px, Y: 2px, Blur: 5px, Color: rgba(0,0,0,.4)
 *    -   transform               - arguments: Parameters: null
 *    -   transform-style         - arguments: Style: preserve-3d
 *    -   transition              - Default arguments: What: all, Length: 1s, Easing: ease-in-out
 *    -                           - Examples: @include transition (all 2s ease-in-out);
 *    -                                       @include transition (opacity 1s ease-in 2s, width 2s ease-out);
 *    -   triple-borders          - arguments: Color One: #3C3C3C, Color Two: #999999, Color Three: #000000, Radius: 0
 *    -   keyframes               - arguments: Animation name
 *                                - content:   Animation css
 *    -   animation               - arguments: name duration timing-function delay iteration-count direction fill-mode play-state
                                             (http://www.w3schools.com/cssref/css3_pr_animation.asp)
 *    -  simpleAnim               - arguments: Duration, Delay, ease, element: all
 *    -  anim                     - arguments: Duration, Delay, ease, transform, originX: 50%, originY: 50%, element: all
 *-------------------------------------------------------------*/
@font-face {
  font-family: "CircularBook";
  src: url("../font/circularbook/CircularStd-Book_gdi.eot?") format("eot"), url("../font/circularbook/CircularStd-Book_gdi.woff") format("woff"), url("../font/circularbook/CircularStd-Book_gdi.ttf") format("truetype"), url("../font/circularbook/CircularStd-Book_gdi.svg#CircularBook") format("svg"); }

/* line 3, /Users/panagiotisthomoglou/Projects/camper/src/scss/global/_fonts.scss */
#font-charger {
  left: -10000px;
  top: -10000px;
  position: absolute;
  opacity: 0; }
  /* line 8, /Users/panagiotisthomoglou/Projects/camper/src/scss/global/_fonts.scss */
  #font-charger #CircularBook {
    font-family: 'CircularBook'; }

/* line 2, /Users/panagiotisthomoglou/Projects/camper/src/scss/global/_global.scss */
html, body {
  padding: 0;
  margin: 0;
  font-family: "CircularBook";
  background-color: #232323; }

/* line 9, /Users/panagiotisthomoglou/Projects/camper/src/scss/global/_global.scss */
html {
  overflow-x: hidden;
  overflow-y: scroll; }

/* line 15, /Users/panagiotisthomoglou/Projects/camper/src/scss/global/_global.scss */
#app-container {
  -webkit-font-smoothing: antialiased;
  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.004);
  cursor: default;
  font-size: 20px;
  position: absolute; }

/* line 36, /Users/panagiotisthomoglou/Projects/camper/src/scss/global/_global.scss */
#pages-container {
  position: relative; }
  /* line 39, /Users/panagiotisthomoglou/Projects/camper/src/scss/global/_global.scss */
  #pages-container > div {
    position: absolute; }

/* line 45, /Users/panagiotisthomoglou/Projects/camper/src/scss/global/_global.scss */
footer, header {
  padding: 14px; }

/* line 49, /Users/panagiotisthomoglou/Projects/camper/src/scss/global/_global.scss */
.page-wrapper {
  position: fixed;
  color: #ffffff; }

/* line 1, /Users/panagiotisthomoglou/Projects/camper/src/scss/global/_ui.scss */
* {
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  -webkit-transform-style: flat;
          transform-style: flat;
  -webkit-tap-highlight-color: transparent;
  -webkit-user-drag: none;
  outline: 0; }

/* line 9, /Users/panagiotisthomoglou/Projects/camper/src/scss/global/_ui.scss */
*, *:before, *:after {
  box-sizing: inherit; }

/* line 12, /Users/panagiotisthomoglou/Projects/camper/src/scss/global/_ui.scss */
button {
  background: none repeat scroll 0 0 transparent;
  border: medium none;
  border-spacing: 0;
  list-style: none outside none;
  margin: 0;
  padding: 0;
  text-align: left;
  text-decoration: none;
  text-indent: 0;
  cursor: pointer; }

/* line 24, /Users/panagiotisthomoglou/Projects/camper/src/scss/global/_ui.scss */
img {
  border: 0; }

/* line 25, /Users/panagiotisthomoglou/Projects/camper/src/scss/global/_ui.scss */
svg, svg * {
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden; }

/* line 28, /Users/panagiotisthomoglou/Projects/camper/src/scss/global/_ui.scss */
.clear-float {
  clear: both; }

/* line 31, /Users/panagiotisthomoglou/Projects/camper/src/scss/global/_ui.scss */
img {
  width: 100%; }

/* line 34, /Users/panagiotisthomoglou/Projects/camper/src/scss/global/_ui.scss */
a:-moz-focus-inner {
  border: 0;
  outline: none; }

/* line 38, /Users/panagiotisthomoglou/Projects/camper/src/scss/global/_ui.scss */
a:focus {
  border: 0;
  outline: none; }

/* line 43, /Users/panagiotisthomoglou/Projects/camper/src/scss/global/_ui.scss */
img {
  -ms-interpolation-mode: bicubic; }

/* line 47, /Users/panagiotisthomoglou/Projects/camper/src/scss/global/_ui.scss */
img {
  background: transparent;
  -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr=#00FFFFFF,endColorstr=#00FFFFFF)";
  /* IE8 */
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#00FFFFFF,endColorstr=#00FFFFFF);
  /* IE6 & 7 */
  zoom: 1; }

/* line 53, /Users/panagiotisthomoglou/Projects/camper/src/scss/global/_ui.scss */
.btn {
  cursor: pointer; }

/* line 56, /Users/panagiotisthomoglou/Projects/camper/src/scss/global/_ui.scss */
.relative {
  position: relative;
  width: 100%;
  height: 100%; }

/* line 61, /Users/panagiotisthomoglou/Projects/camper/src/scss/global/_ui.scss */
.full, html, #app-container, #app-template, #pages-container, #pages-container > div, .page-wrapper, #home-page, #about-page, #contact-page {
  width: 100%;
  height: 100%; }

/* line 65, /Users/panagiotisthomoglou/Projects/camper/src/scss/global/_ui.scss */
.top-left, .full-block {
  top: 0;
  left: 0; }

/* line 69, /Users/panagiotisthomoglou/Projects/camper/src/scss/global/_ui.scss */
.vertical-center-parent {
  width: 100%;
  height: 100%;
  display: table; }

/* line 74, /Users/panagiotisthomoglou/Projects/camper/src/scss/global/_ui.scss */
.vertical-center-child {
  display: table-cell;
  vertical-align: middle;
  text-align: center; }

/* line 79, /Users/panagiotisthomoglou/Projects/camper/src/scss/global/_ui.scss */
.full-block {
  position: absolute; }

/* line 83, /Users/panagiotisthomoglou/Projects/camper/src/scss/global/_ui.scss */
h4 {
  font-size: 30px;
  line-height: 70px; }

/* line 87, /Users/panagiotisthomoglou/Projects/camper/src/scss/global/_ui.scss */
a {
  font-size: 22px;
  color: #ffffff;
  text-decoration: none; }

/* line 1, /Users/panagiotisthomoglou/Projects/camper/src/scss/layout/_frontcontainer.scss */
#front-container {
  position: fixed;
  z-index: 20; }
  /* line 4, /Users/panagiotisthomoglou/Projects/camper/src/scss/layout/_frontcontainer.scss */
  #front-container a {
    color: #000000; }
  /* line 7, /Users/panagiotisthomoglou/Projects/camper/src/scss/layout/_frontcontainer.scss */
  #front-container header {
    width: 100%;
    background-color: yellow;
    position: fixed; }
  /* line 12, /Users/panagiotisthomoglou/Projects/camper/src/scss/layout/_frontcontainer.scss */
  #front-container footer {
    width: 100%;
    background-color: yellow;
    position: fixed;
    bottom: 0; }
  /* line 19, /Users/panagiotisthomoglou/Projects/camper/src/scss/layout/_frontcontainer.scss */
  #front-container ul li {
    display: inline-block;
    /* For normal, healthy browsers */
    margin-right: 20px; }
    /* line 262, /Users/panagiotisthomoglou/Projects/camper/src/scss/global/_baseMixins.scss */
    * html #front-container ul li {
      /* for IE6 */
      display: inline; }
    /* line 266, /Users/panagiotisthomoglou/Projects/camper/src/scss/global/_baseMixins.scss */
    * + html #front-container ul li {
      /* for IE7 */
      display: inline; }

/*# sourceMappingURL=data:application/json;base64, */